#!/usr/bin/env node
/* -*- mode: javascript -*-

  This file is part of JSlich, a JavaScript license checker.
  Copyright 2013, Kuno Woudt <kuno@frob.nl>.
  License: copyleft-next 0.3.0

*/

var _ = require ('underscore');
var chalk = require ('chalk');
var path = require ('path');
var when = require ('when');
var request = require ('request');
var jslich = require ('../');

// var verify_javascript = function (urls) {
//     var promises = _(urls).map (function (remote_js_file, idx) {
//         var deferred = when.defer ();
//         var filename = path.basename (remote_js_file);
//         request(remote_js_file, function (error, response, body) {
//             if (!error && response.statusCode == 200) {
//                 var libre = jslich.analyse.js (filename, body);
//                 deferred.resolve (libre ? "free" : "non-free");
//             }
//             else
//             {
//                 console.log ('error downloading ' + filename);
//                 deferred.resolve ("error");
//             }
//         });

//         return deferred.promise;
//     });

//     return when.settle (promises);
// };

var report_results = function (results) {
    var r = [
        results['free'] + ' files are free software/open source',
        results['non-free'] + ' files non-free or unrecognized'
    ];

    if (results['error'] > 0)
    {
        r.push (results['error'] + ' files could not be downloaded.');
    }

    result_string = r.join (', ') + '.';
    console.log ('');

    if (results['non-free'] > 0 || results['error'] > 0)
    {
        console.log (chalk.white.bgRed.bold ("FAILED!") + ' ' + result_string);
    }
    else
    {
        console.log (chalk.white.bgGreen.bold ("OK!") + ' ' + result_string);
    }
};

gathered = {
    "jslicense": [
        "http://localhost/jslich/tests/license.html"
    ],
    "scripts": [
        "https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"
    ],
    "page": [
        "http://localhost/jslich/tests/immediate-jquery.html"
    ]
}

gathered = {
    "jslicense": [
        "http://localhost/jslich/tests/license.html"
    ],
    "scripts": [
        "http://localhost/jslich/tests/tick.js",
        "http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"
    ],
    "page": [
        "http://localhost/jslich/tests/bootstrap.html"
    ]
};


jslich.analyse (gathered).then (function (results) {
    // var r = _(results).reduce (function (memo, item) {
    //     memo[item.value]++;
    //     return memo;
    // }, {
    //     'non-free': 0,
    //     'free': 0,
    //     'error': 0
    // });

    report_results (r);
});
